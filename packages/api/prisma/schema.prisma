generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int            @id @default(autoincrement())
  email              String         @unique
  password           String
  paymentsCustomerId String?
  roles              UserRole[]     @default([])
  refreshTokens      RefreshToken[]
  deposits           Deposit[]

  @@index([roles(ops: ArrayOps)], type: Gin)
}

enum UserRole {
  Admin
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  sessionId String
  expiresAt DateTime

  @@index([expiresAt])
}

model Asset {
  id           Int           @id @default(autoincrement())
  tickerSymbol String        @unique
  type         AssetType
  fullName     String
  description  String?
  logoUrl      String?
  tradingPairs TradingPair[]

  @@index([type], type: Hash)
  @@index([tickerSymbol, fullName])
}

enum AssetType {
  Stock
  Crypto
}

model Currency {
  id           Int           @id @default(autoincrement())
  code         String        @unique
  fullName     String
  tradingPairs TradingPair[]
  Deposit      Deposit[]

  @@index([code, fullName])
}

model TradingPair {
  id         Int      @id @default(autoincrement())
  assetId    Int
  asset      Asset    @relation(fields: [assetId], references: [id])
  currencyId Int
  currency   Currency @relation(fields: [currencyId], references: [id])

  @@unique([assetId, currencyId])
}

model Deposit {
  id                Int           @id @default(autoincrement())
  amount            Decimal
  status            DepositStatus @default(Pending)
  currencyCode      String
  currency          Currency      @relation(fields: [currencyCode], references: [code])
  userId            Int
  user              User          @relation(fields: [userId], references: [id])
  checkoutSessionId String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

enum DepositStatus {
  Pending
  Successful
  Failed
}
